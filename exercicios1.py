# -*- coding: utf-8 -*-
"""exercicios1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15e9noDZRaTC6macDrqvNISHeEm37KshU
"""

# Exercício 1 - Crie uma função que imprima a sequência de números pares entre 1 e 20 (a função não recebe parâmetro) e 
# depois faça uma chamada à função para listar os números   
def sequencia():
  for num in range(2,21,2):
    print(num)

sequencia()

# Exercício 2 - Crie uma função que receba uma string como argumento e retorne a mesma string em letras maiúsculas.
# Faça uma chamada à função, passando como parâmetro uma string
def string(texto):
  print(texto.upper())
  return

string('Bom dia a todos!')

# Exercício 3 - Crie uma função que receba como parâmetro uma lista de 4 elementos, adicione 2 elementos a lista e 
# imprima a lista
def listaElementos(lista):
  print(lista.append(5))
  print(lista.append(6))
  return

lista = [1,2,3,4,]
listaElementos(lista)
print(lista)

# Exercício 4 - Crie uma função que receba um argumento formal e uma possível lista de elementos. Faça duas chamadas 
# à função, com apenas 1 elemento e na segunda chamada com 4 elementos
def lista2(argumento, *lista):
  print(argumento)
  for i in lista:
    print(i)
  return;

lista2(100)
lista2('a','b','c')

# Exercício 5 - Crie uma função anônima e atribua seu retorno a uma variável chamada soma. A expressão vai receber 2 
# números como parâmetro e retornar a soma deles
soma = lambda a, b: a + b
soma(2,2)

# Exercício 6 - Execute o código abaixo e certifique-se que compreende a diferença entre variável global e local
total = 0 # váriavel global, pode ser chamada em qualquer parte do código.
def soma( arg1, arg2 ):
    total = arg1 + arg2; 
    print ("Dentro da função o total é: ", total)  # variável local, dentro do metodo definido. Recebe dois argumentos e os soma. Imprime na tela sempre que o metodo é chamado e recebe os 2 argumentos.
    return total;                                  


soma( 10, 20 );
print ("Fora da função o total é: ", total)

# Exercício 7 - Abaixo você encontra uma lista com temperaturas em graus Celsius
# Crie uma função anônima que converta cada temperatura para Fahrenheit
# Dica: para conseguir realizar este exercício, você deve criar sua função lambda, dentro de uma função 
# (que será estudada no próximo capítulo). Isso permite aplicar sua função a cada elemento da lista
# Como descobrir a fórmula matemática que converte de Celsius para Fahrenheit? Pesquise!!!



Celsius = [39.2, 36.5, 37.3, 37.8]
Fahrenheit = map(lambda x: (float(9)/5)*x + 32, Celsius)
print (list(Fahrenheit))

# Exercício 8
# Crie um dicionário e liste todos os métodos e atributos do dicionário
dicionario = {'Nome1': 'Anderson','Nome2': 'Maria','Nome3': 'Geronimo','Nome4': 'Alice','Nome5': 'Bento','Nome6':'Julia'}
dicionario
dir(dicionario)

# Exercício 9
# Abaixo você encontra a importação do Pandas, um dos principais pacotes Python para análise de dados.
# Analise atentamente todos os métodos disponíveis. Um deles você vai usar no próximo exercício.
import pandas as pd
dir(pd)